name: Release

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: "Version in semver format"
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          
      - name: Configure CI Git User
        run: |
          git config --global user.name "epszaw"
          git config --global user.email "konstantin@epishev.me"
          
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build the library
        run: pnpm build

      - name: Set release version
        run: |
          npx replace-in-file --isRegex=true '/"version":\s*".+"/g' '"version": "${{ github.event.inputs.releaseVersion }}"' 'package.json'
          
      - name: Publish npm package
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Commit release version and create tag
        run: |
          git add -A
          git commit -am "release ${{ github.event.inputs.releaseVersion }}"
          git tag v${{ github.event.inputs.releaseVersion }}
          git push origin v${{ github.event.inputs.releaseVersion }}
          git push origin ${GITHUB_REF}
          
      - name: Publish Github Release
        uses: toolmantim/release-drafter@v5.21.1
        with:
          name: ${{ github.event.inputs.releaseVersion }}
          version: ${{ github.event.inputs.releaseVersion }}
          tag: v${{ github.event.inputs.releaseVersion }}
          publish: "true"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
